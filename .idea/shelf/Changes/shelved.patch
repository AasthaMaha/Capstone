Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, render_template\r\nfrom flask_cors import CORS\r\n\r\napp = Flask(__name__)\r\nCORS(app)\r\n\r\n@app.route('/')\r\ndef home():\r\n    return render_template('index.html')\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ b/app.py	(date 1739585483551)
@@ -1,12 +1,12 @@
 from flask import Flask, render_template
-from flask_cors import CORS
 
 app = Flask(__name__)
-CORS(app)
+
 
 @app.route('/')
 def home():
     return render_template('index.html')
 
+
 if __name__ == '__main__':
     app.run(debug=True)
Index: venv/Lib/site-packages/flask_cors/__init__.py
===================================================================
diff --git a/venv/Lib/site-packages/flask_cors/__init__.py b/venv/Lib/site-packages/flask_cors/__init__.py
deleted file mode 100644
--- a/venv/Lib/site-packages/flask_cors/__init__.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,27 +0,0 @@
-# -*- coding: utf-8 -*-
-"""
-    flask_cors
-    ~~~~
-    Flask-CORS is a simple extension to Flask allowing you to support cross
-    origin resource sharing (CORS) using a simple decorator.
-
-    :copyright: (c) 2016 by Cory Dolphin.
-    :license: MIT, see LICENSE for more details.
-"""
-from .decorator import cross_origin
-from .extension import CORS
-from .version import __version__
-
-__all__ = ['CORS', 'cross_origin']
-
-# Set default logging handler to avoid "No handler found" warnings.
-import logging
-from logging import NullHandler
-
-# Set initial level to WARN. Users must manually enable logging for
-# flask_cors to see our logging.
-rootlogger = logging.getLogger(__name__)
-rootlogger.addHandler(NullHandler())
-
-if rootlogger.level == logging.NOTSET:
-    rootlogger.setLevel(logging.WARN)
Index: venv/Lib/site-packages/pip-25.0.dist-info/AUTHORS.txt
===================================================================
diff --git a/venv/Lib/site-packages/pip-25.0.dist-info/AUTHORS.txt b/venv/Lib/site-packages/pip-25.0.dist-info/AUTHORS.txt
deleted file mode 100644
--- a/venv/Lib/site-packages/pip-25.0.dist-info/AUTHORS.txt	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,806 +0,0 @@
-@Switch01
-A_Rog
-Aakanksha Agrawal
-Abhinav Sagar
-ABHYUDAY PRATAP SINGH
-abs51295
-AceGentile
-Adam Chainz
-Adam Tse
-Adam Wentz
-admin
-Adolfo Ochagavía
-Adrien Morison
-Agus
-ahayrapetyan
-Ahilya
-AinsworthK
-Akash Srivastava
-Alan Yee
-Albert Tugushev
-Albert-Guan
-albertg
-Alberto Sottile
-Aleks Bunin
-Ales Erjavec
-Alethea Flowers
-Alex Gaynor
-Alex Grönholm
-Alex Hedges
-Alex Loosley
-Alex Morega
-Alex Stachowiak
-Alexander Shtyrov
-Alexandre Conrad
-Alexey Popravka
-Aleš Erjavec
-Alli
-Ami Fischman
-Ananya Maiti
-Anatoly Techtonik
-Anders Kaseorg
-Andre Aguiar
-Andreas Lutro
-Andrei Geacar
-Andrew Gaul
-Andrew Shymanel
-Andrey Bienkowski
-Andrey Bulgakov
-Andrés Delfino
-Andy Freeland
-Andy Kluger
-Ani Hayrapetyan
-Aniruddha Basak
-Anish Tambe
-Anrs Hu
-Anthony Sottile
-Antoine Musso
-Anton Ovchinnikov
-Anton Patrushev
-Anton Zelenov
-Antonio Alvarado Hernandez
-Antony Lee
-Antti Kaihola
-Anubhav Patel
-Anudit Nagar
-Anuj Godase
-AQNOUCH Mohammed
-AraHaan
-arena
-arenasys
-Arindam Choudhury
-Armin Ronacher
-Arnon Yaari
-Artem
-Arun Babu Neelicattu
-Ashley Manton
-Ashwin Ramaswami
-atse
-Atsushi Odagiri
-Avinash Karhana
-Avner Cohen
-Awit (Ah-Wit) Ghirmai
-Baptiste Mispelon
-Barney Gale
-barneygale
-Bartek Ogryczak
-Bastian Venthur
-Ben Bodenmiller
-Ben Darnell
-Ben Hoyt
-Ben Mares
-Ben Rosser
-Bence Nagy
-Benjamin Peterson
-Benjamin VanEvery
-Benoit Pierre
-Berker Peksag
-Bernard
-Bernard Tyers
-Bernardo B. Marques
-Bernhard M. Wiedemann
-Bertil Hatt
-Bhavam Vidyarthi
-Blazej Michalik
-Bogdan Opanchuk
-BorisZZZ
-Brad Erickson
-Bradley Ayers
-Branch Vincent
-Brandon L. Reiss
-Brandt Bucher
-Brannon Dorsey
-Brett Randall
-Brett Rosen
-Brian Cristante
-Brian Rosner
-briantracy
-BrownTruck
-Bruno Oliveira
-Bruno Renié
-Bruno S
-Bstrdsmkr
-Buck Golemon
-burrows
-Bussonnier Matthias
-bwoodsend
-c22
-Caleb Brown
-Caleb Martinez
-Calvin Smith
-Carl Meyer
-Carlos Liam
-Carol Willing
-Carter Thayer
-Cass
-Chandrasekhar Atina
-Charlie Marsh
-charwick
-Chih-Hsuan Yen
-Chris Brinker
-Chris Hunt
-Chris Jerdonek
-Chris Kuehl
-Chris Markiewicz
-Chris McDonough
-Chris Pawley
-Chris Pryer
-Chris Wolfe
-Christian Clauss
-Christian Heimes
-Christian Oudard
-Christoph Reiter
-Christopher Hunt
-Christopher Snyder
-chrysle
-cjc7373
-Clark Boylan
-Claudio Jolowicz
-Clay McClure
-Cody
-Cody Soyland
-Colin Watson
-Collin Anderson
-Connor Osborn
-Cooper Lees
-Cooper Ry Lees
-Cory Benfield
-Cory Wright
-Craig Kerstiens
-Cristian Sorinel
-Cristina
-Cristina Muñoz
-ctg123
-Curtis Doty
-cytolentino
-Daan De Meyer
-Dale
-Damian
-Damian Quiroga
-Damian Shaw
-Dan Black
-Dan Savilonis
-Dan Sully
-Dane Hillard
-daniel
-Daniel Collins
-Daniel Hahler
-Daniel Holth
-Daniel Jost
-Daniel Katz
-Daniel Shaulov
-Daniele Esposti
-Daniele Nicolodi
-Daniele Procida
-Daniil Konovalenko
-Danny Hermes
-Danny McClanahan
-Darren Kavanagh
-Dav Clark
-Dave Abrahams
-Dave Jones
-David Aguilar
-David Black
-David Bordeynik
-David Caro
-David D Lowe
-David Evans
-David Hewitt
-David Linke
-David Poggi
-David Poznik
-David Pursehouse
-David Runge
-David Tucker
-David Wales
-Davidovich
-ddelange
-Deepak Sharma
-Deepyaman Datta
-Denise Yu
-dependabot[bot]
-derwolfe
-Desetude
-Devesh Kumar Singh
-devsagul
-Diego Caraballo
-Diego Ramirez
-DiegoCaraballo
-Dimitri Merejkowsky
-Dimitri Papadopoulos
-Dimitri Papadopoulos Orfanos
-Dirk Stolle
-Dmitry Gladkov
-Dmitry Volodin
-Domen Kožar
-Dominic Davis-Foster
-Donald Stufft
-Dongweiming
-doron zarhi
-Dos Moonen
-Douglas Thor
-DrFeathers
-Dustin Ingram
-Dustin Rodrigues
-Dwayne Bailey
-Ed Morley
-Edgar Ramírez
-Edgar Ramírez Mondragón
-Ee Durbin
-Efflam Lemaillet
-efflamlemaillet
-Eitan Adler
-ekristina
-elainechan
-Eli Schwartz
-Elisha Hollander
-Ellen Marie Dash
-Emil Burzo
-Emil Styrke
-Emmanuel Arias
-Endoh Takanao
-enoch
-Erdinc Mutlu
-Eric Cousineau
-Eric Gillingham
-Eric Hanchrow
-Eric Hopper
-Erik M. Bray
-Erik Rose
-Erwin Janssen
-Eugene Vereshchagin
-everdimension
-Federico
-Felipe Peter
-Felix Yan
-fiber-space
-Filip Kokosiński
-Filipe Laíns
-Finn Womack
-finnagin
-Flavio Amurrio
-Florian Briand
-Florian Rathgeber
-Francesco
-Francesco Montesano
-Fredrik Orderud
-Frost Ming
-Gabriel Curio
-Gabriel de Perthuis
-Garry Polley
-gavin
-gdanielson
-Geoffrey Sneddon
-George Song
-Georgi Valkov
-Georgy Pchelkin
-ghost
-Giftlin Rajaiah
-gizmoguy1
-gkdoc
-Godefroid Chapelle
-Gopinath M
-GOTO Hayato
-gousaiyang
-gpiks
-Greg Roodt
-Greg Ward
-Guilherme Espada
-Guillaume Seguin
-gutsytechster
-Guy Rozendorn
-Guy Tuval
-gzpan123
-Hanjun Kim
-Hari Charan
-Harsh Vardhan
-harupy
-Harutaka Kawamura
-hauntsaninja
-Henrich Hartzer
-Henry Schreiner
-Herbert Pfennig
-Holly Stotelmyer
-Honnix
-Hsiaoming Yang
-Hugo Lopes Tavares
-Hugo van Kemenade
-Hugues Bruant
-Hynek Schlawack
-Ian Bicking
-Ian Cordasco
-Ian Lee
-Ian Stapleton Cordasco
-Ian Wienand
-Igor Kuzmitshov
-Igor Sobreira
-Ikko Ashimine
-Ilan Schnell
-Illia Volochii
-Ilya Baryshev
-Inada Naoki
-Ionel Cristian Mărieș
-Ionel Maries Cristian
-Itamar Turner-Trauring
-Ivan Pozdeev
-J. Nick Koston
-Jacob Kim
-Jacob Walls
-Jaime Sanz
-jakirkham
-Jakub Kuczys
-Jakub Stasiak
-Jakub Vysoky
-Jakub Wilk
-James Cleveland
-James Curtin
-James Firth
-James Gerity
-James Polley
-Jan Pokorný
-Jannis Leidel
-Jarek Potiuk
-jarondl
-Jason Curtis
-Jason R. Coombs
-JasonMo
-JasonMo1
-Jay Graves
-Jean Abou Samra
-Jean-Christophe Fillion-Robin
-Jeff Barber
-Jeff Dairiki
-Jeff Widman
-Jelmer Vernooĳ
-jenix21
-Jeremy Fleischman
-Jeremy Stanley
-Jeremy Zafran
-Jesse Rittner
-Jiashuo Li
-Jim Fisher
-Jim Garrison
-Jinzhe Zeng
-Jiun Bae
-Jivan Amara
-Joe Bylund
-Joe Michelini
-John Paton
-John Sirois
-John T. Wodder II
-John-Scott Atlakson
-johnthagen
-Jon Banafato
-Jon Dufresne
-Jon Parise
-Jonas Nockert
-Jonathan Herbert
-Joonatan Partanen
-Joost Molenaar
-Jorge Niedbalski
-Joseph Bylund
-Joseph Long
-Josh Bronson
-Josh Cannon
-Josh Hansen
-Josh Schneier
-Joshua
-JoshuaPerdue
-Juan Luis Cano Rodríguez
-Juanjo Bazán
-Judah Rand
-Julian Berman
-Julian Gethmann
-Julien Demoor
-July Tikhonov
-Jussi Kukkonen
-Justin van Heek
-jwg4
-Jyrki Pulliainen
-Kai Chen
-Kai Mueller
-Kamal Bin Mustafa
-Karolina Surma
-kasium
-kaustav haldar
-keanemind
-Keith Maxwell
-Kelsey Hightower
-Kenneth Belitzky
-Kenneth Reitz
-Kevin Burke
-Kevin Carter
-Kevin Frommelt
-Kevin R Patterson
-Kexuan Sun
-Kit Randel
-Klaas van Schelven
-KOLANICH
-konstin
-kpinc
-Krishna Oza
-Kumar McMillan
-Kuntal Majumder
-Kurt McKee
-Kyle Persohn
-lakshmanaram
-Laszlo Kiss-Kollar
-Laurent Bristiel
-Laurent LAPORTE
-Laurie O
-Laurie Opperman
-layday
-Leon Sasson
-Lev Givon
-Lincoln de Sousa
-Lipis
-lorddavidiii
-Loren Carvalho
-Lucas Cimon
-Ludovic Gasc
-Luis Medel
-Lukas Geiger
-Lukas Juhrich
-Luke Macken
-Luo Jiebin
-luojiebin
-luz.paz
-László Kiss Kollár
-M00nL1ght
-Marc Abramowitz
-Marc Tamlyn
-Marcus Smith
-Mariatta
-Mark Kohler
-Mark McLoughlin
-Mark Williams
-Markus Hametner
-Martey Dodoo
-Martin Fischer
-Martin Häcker
-Martin Pavlasek
-Masaki
-Masklinn
-Matej Stuchlik
-Mathew Jennings
-Mathieu Bridon
-Mathieu Kniewallner
-Matt Bacchi
-Matt Good
-Matt Maker
-Matt Robenolt
-Matt Wozniski
-matthew
-Matthew Einhorn
-Matthew Feickert
-Matthew Gilliard
-Matthew Hughes
-Matthew Iversen
-Matthew Treinish
-Matthew Trumbell
-Matthew Willson
-Matthias Bussonnier
-mattip
-Maurits van Rees
-Max W Chase
-Maxim Kurnikov
-Maxime Rouyrre
-mayeut
-mbaluna
-mdebi
-memoselyk
-meowmeowcat
-Michael
-Michael Aquilina
-Michael E. Karpeles
-Michael Klich
-Michael Mintz
-Michael Williamson
-michaelpacer
-Michał Górny
-Mickaël Schoentgen
-Miguel Araujo Perez
-Mihir Singh
-Mike
-Mike Hendricks
-Min RK
-MinRK
-Miro Hrončok
-Monica Baluna
-montefra
-Monty Taylor
-morotti
-mrKazzila
-Muha Ajjan
-Nadav Wexler
-Nahuel Ambrosini
-Nate Coraor
-Nate Prewitt
-Nathan Houghton
-Nathaniel J. Smith
-Nehal J Wani
-Neil Botelho
-Nguyễn Gia Phong
-Nicholas Serra
-Nick Coghlan
-Nick Stenning
-Nick Timkovich
-Nicolas Bock
-Nicole Harris
-Nikhil Benesch
-Nikhil Ladha
-Nikita Chepanov
-Nikolay Korolev
-Nipunn Koorapati
-Nitesh Sharma
-Niyas Sait
-Noah
-Noah Gorny
-Nowell Strite
-NtaleGrey
-nvdv
-OBITORASU
-Ofek Lev
-ofrinevo
-Oliver Freund
-Oliver Jeeves
-Oliver Mannion
-Oliver Tonnhofer
-Olivier Girardot
-Olivier Grisel
-Ollie Rutherfurd
-OMOTO Kenji
-Omry Yadan
-onlinejudge95
-Oren Held
-Oscar Benjamin
-Oz N Tiram
-Pachwenko
-Patrick Dubroy
-Patrick Jenkins
-Patrick Lawson
-patricktokeeffe
-Patrik Kopkan
-Paul Ganssle
-Paul Kehrer
-Paul Moore
-Paul Nasrat
-Paul Oswald
-Paul van der Linden
-Paulus Schoutsen
-Pavel Safronov
-Pavithra Eswaramoorthy
-Pawel Jasinski
-Paweł Szramowski
-Pekka Klärck
-Peter Gessler
-Peter Lisák
-Peter Shen
-Peter Waller
-Petr Viktorin
-petr-tik
-Phaneendra Chiruvella
-Phil Elson
-Phil Freo
-Phil Pennock
-Phil Whelan
-Philip Jägenstedt
-Philip Molloy
-Philippe Ombredanne
-Pi Delport
-Pierre-Yves Rofes
-Pieter Degroote
-pip
-Prabakaran Kumaresshan
-Prabhjyotsing Surjit Singh Sodhi
-Prabhu Marappan
-Pradyun Gedam
-Prashant Sharma
-Pratik Mallya
-pre-commit-ci[bot]
-Preet Thakkar
-Preston Holmes
-Przemek Wrzos
-Pulkit Goyal
-q0w
-Qiangning Hong
-Qiming Xu
-Quentin Lee
-Quentin Pradet
-R. David Murray
-Rafael Caricio
-Ralf Schmitt
-Ran Benita
-Randy Döring
-Razzi Abuissa
-rdb
-Reece Dunham
-Remi Rampin
-Rene Dudfield
-Riccardo Magliocchetti
-Riccardo Schirone
-Richard Jones
-Richard Si
-Ricky Ng-Adam
-Rishi
-rmorotti
-RobberPhex
-Robert Collins
-Robert McGibbon
-Robert Pollak
-Robert T. McGibbon
-robin elisha robinson
-Roey Berman
-Rohan Jain
-Roman Bogorodskiy
-Roman Donchenko
-Romuald Brunet
-ronaudinho
-Ronny Pfannschmidt
-Rory McCann
-Ross Brattain
-Roy Wellington Ⅳ
-Ruairidh MacLeod
-Russell Keith-Magee
-Ryan Shepherd
-Ryan Wooden
-ryneeverett
-S. Guliaev
-Sachi King
-Salvatore Rinchiera
-sandeepkiran-js
-Sander Van Balen
-Savio Jomton
-schlamar
-Scott Kitterman
-Sean
-seanj
-Sebastian Jordan
-Sebastian Schaetz
-Segev Finer
-SeongSoo Cho
-Sergey Vasilyev
-Seth Michael Larson
-Seth Woodworth
-Shahar Epstein
-Shantanu
-shenxianpeng
-shireenrao
-Shivansh-007
-Shixian Sheng
-Shlomi Fish
-Shovan Maity
-Simeon Visser
-Simon Cross
-Simon Pichugin
-sinoroc
-sinscary
-snook92
-socketubs
-Sorin Sbarnea
-Srinivas Nyayapati
-Srishti Hegde
-Stavros Korokithakis
-Stefan Scherfke
-Stefano Rivera
-Stephan Erb
-Stephen Rosen
-stepshal
-Steve (Gadget) Barnes
-Steve Barnes
-Steve Dower
-Steve Kowalik
-Steven Myint
-Steven Silvester
-stonebig
-studioj
-Stéphane Bidoul
-Stéphane Bidoul (ACSONE)
-Stéphane Klein
-Sumana Harihareswara
-Surbhi Sharma
-Sviatoslav Sydorenko
-Sviatoslav Sydorenko (Святослав Сидоренко)
-Swat009
-Sylvain
-Takayuki SHIMIZUKAWA
-Taneli Hukkinen
-tbeswick
-Thiago
-Thijs Triemstra
-Thomas Fenzl
-Thomas Grainger
-Thomas Guettler
-Thomas Johansson
-Thomas Kluyver
-Thomas Smith
-Thomas VINCENT
-Tim D. Smith
-Tim Gates
-Tim Harder
-Tim Heap
-tim smith
-tinruufu
-Tobias Hermann
-Tom Forbes
-Tom Freudenheim
-Tom V
-Tomas Hrnciar
-Tomas Orsava
-Tomer Chachamu
-Tommi Enenkel | AnB
-Tomáš Hrnčiar
-Tony Beswick
-Tony Narlock
-Tony Zhaocheng Tan
-TonyBeswick
-toonarmycaptain
-Toshio Kuratomi
-toxinu
-Travis Swicegood
-Tushar Sadhwani
-Tzu-ping Chung
-Valentin Haenel
-Victor Stinner
-victorvpaulo
-Vikram - Google
-Viktor Szépe
-Ville Skyttä
-Vinay Sajip
-Vincent Philippon
-Vinicyus Macedo
-Vipul Kumar
-Vitaly Babiy
-Vladimir Fokow
-Vladimir Rutsky
-W. Trevor King
-Wil Tan
-Wilfred Hughes
-William Edwards
-William ML Leslie
-William T Olson
-William Woodruff
-Wilson Mo
-wim glenn
-Winson Luk
-Wolfgang Maier
-Wu Zhenyu
-XAMES3
-Xavier Fernandez
-Xianpeng Shen
-xoviat
-xtreak
-YAMAMOTO Takashi
-Yen Chi Hsuan
-Yeray Diaz Diaz
-Yoval P
-Yu Jian
-Yuan Jing Vincent Yan
-Yusuke Hayashi
-Zearin
-Zhiping Deng
-ziebam
-Zvezdan Petkovic
-Łukasz Langa
-Роман Донченко
-Семён Марьясин
Index: venv/Lib/site-packages/flask_cors/core.py
===================================================================
diff --git a/venv/Lib/site-packages/flask_cors/core.py b/venv/Lib/site-packages/flask_cors/core.py
deleted file mode 100644
--- a/venv/Lib/site-packages/flask_cors/core.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,384 +0,0 @@
-# -*- coding: utf-8 -*-
-"""
-    core
-    ~~~~
-    Core functionality shared between the extension and the decorator.
-
-    :copyright: (c) 2016 by Cory Dolphin.
-    :license: MIT, see LICENSE for more details.
-"""
-import re
-import logging
-from collections.abc import Iterable
-from datetime import timedelta
-from flask import request, current_app
-from werkzeug.datastructures import Headers, MultiDict
-
-LOG = logging.getLogger(__name__)
-
-# Response Headers
-ACL_ORIGIN = 'Access-Control-Allow-Origin'
-ACL_METHODS = 'Access-Control-Allow-Methods'
-ACL_ALLOW_HEADERS = 'Access-Control-Allow-Headers'
-ACL_EXPOSE_HEADERS = 'Access-Control-Expose-Headers'
-ACL_CREDENTIALS = 'Access-Control-Allow-Credentials'
-ACL_MAX_AGE = 'Access-Control-Max-Age'
-ACL_RESPONSE_PRIVATE_NETWORK = 'Access-Control-Allow-Private-Network'
-
-# Request Header
-ACL_REQUEST_METHOD = 'Access-Control-Request-Method'
-ACL_REQUEST_HEADERS = 'Access-Control-Request-Headers'
-ACL_REQUEST_HEADER_PRIVATE_NETWORK = 'Access-Control-Request-Private-Network'
-
-ALL_METHODS = ['GET', 'HEAD', 'POST', 'OPTIONS', 'PUT', 'PATCH', 'DELETE']
-CONFIG_OPTIONS = ['CORS_ORIGINS', 'CORS_METHODS', 'CORS_ALLOW_HEADERS',
-                  'CORS_EXPOSE_HEADERS', 'CORS_SUPPORTS_CREDENTIALS',
-                  'CORS_MAX_AGE', 'CORS_SEND_WILDCARD',
-                  'CORS_AUTOMATIC_OPTIONS', 'CORS_VARY_HEADER',
-                  'CORS_RESOURCES', 'CORS_INTERCEPT_EXCEPTIONS',
-                  'CORS_ALWAYS_SEND', 'CORS_ALLOW_PRIVATE_NETWORK']
-# Attribute added to request object by decorator to indicate that CORS
-# was evaluated, in case the decorator and extension are both applied
-# to a view.
-FLASK_CORS_EVALUATED = '_FLASK_CORS_EVALUATED'
-
-# Strange, but this gets the type of a compiled regex, which is otherwise not
-# exposed in a public API.
-RegexObject = type(re.compile(''))
-DEFAULT_OPTIONS = dict(origins='*',
-                       methods=ALL_METHODS,
-                       allow_headers='*',
-                       expose_headers=None,
-                       supports_credentials=False,
-                       max_age=None,
-                       send_wildcard=False,
-                       automatic_options=True,
-                       vary_header=True,
-                       resources=r'/*',
-                       intercept_exceptions=True,
-                       always_send=True,
-                       allow_private_network=False)
-
-
-def parse_resources(resources):
-    if isinstance(resources, dict):
-        # To make the API more consistent with the decorator, allow a
-        # resource of '*', which is not actually a valid regexp.
-        resources = [(re_fix(k), v) for k, v in resources.items()]
-
-        # Sort by regex length to provide consistency of matching and
-        # to provide a proxy for specificity of match. E.G. longer
-        # regular expressions are tried first.
-        def pattern_length(pair):
-            maybe_regex, _ = pair
-            return len(get_regexp_pattern(maybe_regex))
-
-        return sorted(resources,
-                      key=pattern_length,
-                      reverse=True)
-
-    elif isinstance(resources, str):
-        return [(re_fix(resources), {})]
-
-    elif isinstance(resources, Iterable):
-        return [(re_fix(r), {}) for r in resources]
-
-    # Type of compiled regex is not part of the public API. Test for this
-    # at runtime.
-    elif isinstance(resources,  RegexObject):
-        return [(re_fix(resources), {})]
-
-    else:
-        raise ValueError("Unexpected value for resources argument.")
-
-
-def get_regexp_pattern(regexp):
-    """
-    Helper that returns regexp pattern from given value.
-
-    :param regexp: regular expression to stringify
-    :type regexp: _sre.SRE_Pattern or str
-    :returns: string representation of given regexp pattern
-    :rtype: str
-    """
-    try:
-        return regexp.pattern
-    except AttributeError:
-        return str(regexp)
-
-
-def get_cors_origins(options, request_origin):
-    origins = options.get('origins')
-    wildcard = r'.*' in origins
-
-    # If the Origin header is not present terminate this set of steps.
-    # The request is outside the scope of this specification.-- W3Spec
-    if request_origin:
-        LOG.debug("CORS request received with 'Origin' %s", request_origin)
-
-        # If the allowed origins is an asterisk or 'wildcard', always match
-        if wildcard and options.get('send_wildcard'):
-            LOG.debug("Allowed origins are set to '*'. Sending wildcard CORS header.")
-            return ['*']
-        # If the value of the Origin header is a case-sensitive match
-        # for any of the values in list of origins
-        elif try_match_any(request_origin, origins):
-            LOG.debug("The request's Origin header matches. Sending CORS headers.", )
-            # Add a single Access-Control-Allow-Origin header, with either
-            # the value of the Origin header or the string "*" as value.
-            # -- W3Spec
-            return [request_origin]
-        else:
-            LOG.debug("The request's Origin header does not match any of allowed origins.")
-            return None
-
-
-    elif options.get('always_send'):
-        if wildcard:
-            # If wildcard is in the origins, even if 'send_wildcard' is False,
-            # simply send the wildcard. Unless supports_credentials is True,
-            # since that is forbidded by the spec..
-            # It is the most-likely to be correct thing to do (the only other
-            # option is to return nothing, which  almost certainly not what
-            # the developer wants if the '*' origin was specified.
-            if options.get('supports_credentials'):
-                return None
-            else:
-                return ['*']
-        else:
-            # Return all origins that are not regexes.
-            return sorted([o for o in origins if not probably_regex(o)])
-
-    # Terminate these steps, return the original request untouched.
-    else:
-        LOG.debug("The request did not contain an 'Origin' header. This means the browser or client did not request CORS, ensure the Origin Header is set.")
-        return None
-
-
-def get_allow_headers(options, acl_request_headers):
-    if acl_request_headers:
-        request_headers = [h.strip() for h in acl_request_headers.split(',')]
-
-        # any header that matches in the allow_headers
-        matching_headers = filter(
-            lambda h: try_match_any(h, options.get('allow_headers')),
-            request_headers
-        )
-
-        return ', '.join(sorted(matching_headers))
-
-    return None
-
-
-def get_cors_headers(options, request_headers, request_method):
-    origins_to_set = get_cors_origins(options, request_headers.get('Origin'))
-    headers = MultiDict()
-
-    if not origins_to_set:  # CORS is not enabled for this route
-        return headers
-
-    for origin in origins_to_set:
-        headers.add(ACL_ORIGIN, origin)
-
-    headers[ACL_EXPOSE_HEADERS] = options.get('expose_headers')
-
-    if options.get('supports_credentials'):
-        headers[ACL_CREDENTIALS] = 'true'  # case sensitive
-
-    if ACL_REQUEST_HEADER_PRIVATE_NETWORK in request_headers \
-            and request_headers.get(ACL_REQUEST_HEADER_PRIVATE_NETWORK) == 'true':
-        allow_private_network = 'true' if options.get('allow_private_network') else 'false'
-        headers[ACL_RESPONSE_PRIVATE_NETWORK] = allow_private_network
-
-    # This is a preflight request
-    # http://www.w3.org/TR/cors/#resource-preflight-requests
-    if request_method == 'OPTIONS':
-        acl_request_method = request_headers.get(ACL_REQUEST_METHOD, '').upper()
-
-        # If there is no Access-Control-Request-Method header or if parsing
-        # failed, do not set any additional headers
-        if acl_request_method and acl_request_method in options.get('methods'):
-
-            # If method is not a case-sensitive match for any of the values in
-            # list of methods do not set any additional headers and terminate
-            # this set of steps.
-            headers[ACL_ALLOW_HEADERS] = get_allow_headers(options, request_headers.get(ACL_REQUEST_HEADERS))
-            headers[ACL_MAX_AGE] = options.get('max_age')
-            headers[ACL_METHODS] = options.get('methods')
-        else:
-            LOG.info("The request's Access-Control-Request-Method header does not match allowed methods. CORS headers will not be applied.")
-
-    # http://www.w3.org/TR/cors/#resource-implementation
-    if options.get('vary_header'):
-        # Only set header if the origin returned will vary dynamically,
-        # i.e. if we are not returning an asterisk, and there are multiple
-        # origins that can be matched.
-        if headers[ACL_ORIGIN] == '*':
-            pass
-        elif (len(options.get('origins')) > 1 or
-              len(origins_to_set) > 1 or
-              any(map(probably_regex, options.get('origins')))):
-            headers.add('Vary', 'Origin')
-
-    return MultiDict((k, v) for k, v in headers.items() if v)
-
-
-def set_cors_headers(resp, options):
-    """
-    Performs the actual evaluation of Flask-CORS options and actually
-    modifies the response object.
-
-    This function is used both in the decorator and the after_request
-    callback
-    """
-
-    # If CORS has already been evaluated via the decorator, skip
-    if hasattr(resp, FLASK_CORS_EVALUATED):
-        LOG.debug('CORS have been already evaluated, skipping')
-        return resp
-
-    # Some libraries, like OAuthlib, set resp.headers to non Multidict
-    # objects (Werkzeug Headers work as well). This is a problem because
-    # headers allow repeated values.
-    if (not isinstance(resp.headers, Headers)
-           and not isinstance(resp.headers, MultiDict)):
-        resp.headers = MultiDict(resp.headers)
-
-    headers_to_set = get_cors_headers(options, request.headers, request.method)
-
-    LOG.debug('Settings CORS headers: %s', str(headers_to_set))
-
-    for k, v in headers_to_set.items():
-        resp.headers.add(k, v)
-
-    return resp
-
-def probably_regex(maybe_regex):
-    if isinstance(maybe_regex, RegexObject):
-        return True
-    else:
-        common_regex_chars = ['*', '\\', ']', '?', '$', '^', '[', ']', '(', ')']
-        # Use common characters used in regular expressions as a proxy
-        # for if this string is in fact a regex.
-        return any((c in maybe_regex for c in common_regex_chars))
-
-def re_fix(reg):
-    """
-        Replace the invalid regex r'*' with the valid, wildcard regex r'/.*' to
-        enable the CORS app extension to have a more user friendly api.
-    """
-    return r'.*' if reg == r'*' else reg
-
-
-def try_match_any(inst, patterns):
-    return any(try_match(inst, pattern) for pattern in patterns)
-
-
-def try_match(request_origin, maybe_regex):
-    """Safely attempts to match a pattern or string to a request origin."""
-    if isinstance(maybe_regex, RegexObject):
-        return re.match(maybe_regex, request_origin)
-    elif probably_regex(maybe_regex):
-        return re.match(maybe_regex, request_origin, flags=re.IGNORECASE)
-    else:
-        try:
-            return request_origin.lower() == maybe_regex.lower()
-        except AttributeError:
-            return request_origin == maybe_regex
-
-
-def get_cors_options(appInstance, *dicts):
-    """
-    Compute CORS options for an application by combining the DEFAULT_OPTIONS,
-    the app's configuration-specified options and any dictionaries passed. The
-    last specified option wins.
-    """
-    options = DEFAULT_OPTIONS.copy()
-    options.update(get_app_kwarg_dict(appInstance))
-    if dicts:
-        for d in dicts:
-            options.update(d)
-
-    return serialize_options(options)
-
-
-def get_app_kwarg_dict(appInstance=None):
-    """Returns the dictionary of CORS specific app configurations."""
-    app = (appInstance or current_app)
-
-    # In order to support blueprints which do not have a config attribute
-    app_config = getattr(app, 'config', {})
-
-    return {
-        k.lower().replace('cors_', ''): app_config.get(k)
-        for k in CONFIG_OPTIONS
-        if app_config.get(k) is not None
-    }
-
-
-def flexible_str(obj):
-    """
-    A more flexible str function which intelligently handles stringifying
-    strings, lists and other iterables. The results are lexographically sorted
-    to ensure generated responses are consistent when iterables such as Set
-    are used.
-    """
-    if obj is None:
-        return None
-    elif not isinstance(obj, str) and isinstance(obj, Iterable):
-        return ", ".join(str(item) for item in sorted(obj))
-    else:
-        return str(obj)
-
-
-def serialize_option(options_dict, key, upper=False):
-    if key in options_dict:
-        value = flexible_str(options_dict[key])
-        options_dict[key] = value.upper() if upper else value
-
-
-def ensure_iterable(inst):
-    """
-    Wraps scalars or string types as a list, or returns the iterable instance.
-    """
-    if isinstance(inst, str):
-        return [inst]
-    elif not isinstance(inst, Iterable):
-        return [inst]
-    else:
-        return inst
-
-def sanitize_regex_param(param):
-    return [re_fix(x) for x in ensure_iterable(param)]
-
-
-def serialize_options(opts):
-    """
-    A helper method to serialize and processes the options dictionary.
-    """
-    options = (opts or {}).copy()
-
-    for key in opts.keys():
-        if key not in DEFAULT_OPTIONS:
-            LOG.warning("Unknown option passed to Flask-CORS: %s", key)
-
-    # Ensure origins is a list of allowed origins with at least one entry.
-    options['origins'] = sanitize_regex_param(options.get('origins'))
-    options['allow_headers'] = sanitize_regex_param(options.get('allow_headers'))
-
-    # This is expressly forbidden by the spec. Raise a value error so people
-    # don't get burned in production.
-    if r'.*' in options['origins'] and options['supports_credentials'] and options['send_wildcard']:
-        raise ValueError("Cannot use supports_credentials in conjunction with"
-                         "an origin string of '*'. See: "
-                         "http://www.w3.org/TR/cors/#resource-requests")
-
-
-
-    serialize_option(options, 'expose_headers')
-    serialize_option(options, 'methods', upper=True)
-
-    if isinstance(options.get('max_age'), timedelta):
-        options['max_age'] = str(int(options['max_age'].total_seconds()))
-
-    return options
Index: venv/Lib/site-packages/flask_cors/decorator.py
===================================================================
diff --git a/venv/Lib/site-packages/flask_cors/decorator.py b/venv/Lib/site-packages/flask_cors/decorator.py
deleted file mode 100644
--- a/venv/Lib/site-packages/flask_cors/decorator.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,137 +0,0 @@
-# -*- coding: utf-8 -*-
-"""
-    decorator
-    ~~~~
-    This unit exposes a single decorator which should be used to wrap a
-    Flask route with. It accepts all parameters and options as
-    the CORS extension.
-
-    :copyright: (c) 2016 by Cory Dolphin.
-    :license: MIT, see LICENSE for more details.
-"""
-import logging
-from functools import update_wrapper
-from flask import make_response, request, current_app
-
-from .core import get_cors_options, set_cors_headers, FLASK_CORS_EVALUATED
-
-LOG = logging.getLogger(__name__)
-
-def cross_origin(*args, **kwargs):
-    """
-    This function is the decorator which is used to wrap a Flask route with.
-    In the simplest case, simply use the default parameters to allow all
-    origins in what is the most permissive configuration. If this method
-    modifies state or performs authentication which may be brute-forced, you
-    should add some degree of protection, such as Cross Site Request Forgery
-    protection.
-
-    :param origins:
-        The origin, or list of origins to allow requests from.
-        The origin(s) may be regular expressions, case-sensitive strings,
-        or else an asterisk
-
-        Default : '*'
-    :type origins: list, string or regex
-
-    :param methods:
-        The method or list of methods which the allowed origins are allowed to
-        access for non-simple requests.
-
-        Default : [GET, HEAD, POST, OPTIONS, PUT, PATCH, DELETE]
-    :type methods: list or string
-
-    :param expose_headers:
-        The header or list which are safe to expose to the API of a CORS API
-        specification.
-
-        Default : None
-    :type expose_headers: list or string
-
-    :param allow_headers:
-        The header or list of header field names which can be used when this
-        resource is accessed by allowed origins. The header(s) may be regular
-        expressions, case-sensitive strings, or else an asterisk.
-
-        Default : '*', allow all headers
-    :type allow_headers: list, string or regex
-
-    :param supports_credentials:
-        Allows users to make authenticated requests. If true, injects the
-        `Access-Control-Allow-Credentials` header in responses. This allows
-        cookies and credentials to be submitted across domains.
-
-        :note: This option cannot be used in conjunction with a '*' origin
-
-        Default : False
-    :type supports_credentials: bool
-
-    :param max_age:
-        The maximum time for which this CORS request maybe cached. This value
-        is set as the `Access-Control-Max-Age` header.
-
-        Default : None
-    :type max_age: timedelta, integer, string or None
-
-    :param send_wildcard: If True, and the origins parameter is `*`, a wildcard
-        `Access-Control-Allow-Origin` header is sent, rather than the
-        request's `Origin` header.
-
-        Default : False
-    :type send_wildcard: bool
-
-    :param vary_header:
-        If True, the header Vary: Origin will be returned as per the W3
-        implementation guidelines.
-
-        Setting this header when the `Access-Control-Allow-Origin` is
-        dynamically generated (e.g. when there is more than one allowed
-        origin, and an Origin than '*' is returned) informs CDNs and other
-        caches that the CORS headers are dynamic, and cannot be cached.
-
-        If False, the Vary header will never be injected or altered.
-
-        Default : True
-    :type vary_header: bool
-
-    :param automatic_options:
-        Only applies to the `cross_origin` decorator. If True, Flask-CORS will
-        override Flask's default OPTIONS handling to return CORS headers for
-        OPTIONS requests.
-
-        Default : True
-    :type automatic_options: bool
-
-    """
-    _options = kwargs
-
-    def decorator(f):
-        LOG.debug("Enabling %s for cross_origin using options:%s", f, _options)
-
-        # If True, intercept OPTIONS requests by modifying the view function,
-        # replicating Flask's default behavior, and wrapping the response with
-        # CORS headers.
-        #
-        # If f.provide_automatic_options is unset or True, Flask's route
-        # decorator (which is actually wraps the function object we return)
-        # intercepts OPTIONS handling, and requests will not have CORS headers
-        if _options.get('automatic_options', True):
-            f.required_methods = getattr(f, 'required_methods', set())
-            f.required_methods.add('OPTIONS')
-            f.provide_automatic_options = False
-
-        def wrapped_function(*args, **kwargs):
-            # Handle setting of Flask-Cors parameters
-            options = get_cors_options(current_app, _options)
-
-            if options.get('automatic_options') and request.method == 'OPTIONS':
-                resp = current_app.make_default_options_response()
-            else:
-                resp = make_response(f(*args, **kwargs))
-
-            set_cors_headers(resp, options)
-            setattr(resp, FLASK_CORS_EVALUATED, True)
-            return resp
-
-        return update_wrapper(wrapped_function, f)
-    return decorator
Index: venv/Lib/site-packages/pip-25.0.dist-info/entry_points.txt
===================================================================
diff --git a/venv/Lib/site-packages/pip-25.0.dist-info/entry_points.txt b/venv/Lib/site-packages/pip-25.0.dist-info/entry_points.txt
deleted file mode 100644
--- a/venv/Lib/site-packages/pip-25.0.dist-info/entry_points.txt	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,3 +0,0 @@
-[console_scripts]
-pip = pip._internal.cli.main:main
-pip3 = pip._internal.cli.main:main
Index: venv/Lib/site-packages/flask_cors/extension.py
===================================================================
diff --git a/venv/Lib/site-packages/flask_cors/extension.py b/venv/Lib/site-packages/flask_cors/extension.py
deleted file mode 100644
--- a/venv/Lib/site-packages/flask_cors/extension.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,219 +0,0 @@
-# -*- coding: utf-8 -*-
-"""
-    extension
-    ~~~~
-    Flask-CORS is a simple extension to Flask allowing you to support cross
-    origin resource sharing (CORS) using a simple decorator.
-
-    :copyright: (c) 2016 by Cory Dolphin.
-    :license: MIT, see LICENSE for more details.
-"""
-import logging
-from urllib.parse import unquote_plus
-from flask import request
-
-from .core import (
-    parse_resources,
-    get_cors_options,
-    get_regexp_pattern,
-    ACL_ORIGIN,
-    try_match,
-    set_cors_headers
-)
-
-
-LOG = logging.getLogger(__name__)
-
-class CORS(object):
-    """
-    Initializes Cross Origin Resource sharing for the application. The
-    arguments are identical to :py:func:`cross_origin`, with the addition of a
-    `resources` parameter. The resources parameter defines a series of regular
-    expressions for resource paths to match and optionally, the associated
-    options to be applied to the particular resource. These options are
-    identical to the arguments to :py:func:`cross_origin`.
-
-    The settings for CORS are determined in the following order
-
-    1. Resource level settings (e.g when passed as a dictionary)
-    2. Keyword argument settings
-    3. App level configuration settings (e.g. CORS_*)
-    4. Default settings
-
-    Note: as it is possible for multiple regular expressions to match a
-    resource path, the regular expressions are first sorted by length,
-    from longest to shortest, in order to attempt to match the most
-    specific regular expression. This allows the definition of a
-    number of specific resource options, with a wildcard fallback
-    for all other resources.
-
-    :param resources:
-        The series of regular expression and (optionally) associated CORS
-        options to be applied to the given resource path.
-
-        If the argument is a dictionary, it's keys must be regular expressions,
-        and the values must be a dictionary of kwargs, identical to the kwargs
-        of this function.
-
-        If the argument is a list, it is expected to be a list of regular
-        expressions, for which the app-wide configured options are applied.
-
-        If the argument is a string, it is expected to be a regular expression
-        for which the app-wide configured options are applied.
-
-        Default : Match all and apply app-level configuration
-
-    :type resources: dict, iterable or string
-
-    :param origins:
-        The origin, or list of origins to allow requests from.
-        The origin(s) may be regular expressions, case-sensitive strings,
-        or else an asterisk.
-
-        ..  note::
-
-            origins must include the schema and the port (if not port 80),
-            e.g.,
-            `CORS(app, origins=["http://localhost:8000", "https://example.com"])`.
-
-        Default : '*'
-    :type origins: list, string or regex
-
-    :param methods:
-        The method or list of methods which the allowed origins are allowed to
-        access for non-simple requests.
-
-        Default : [GET, HEAD, POST, OPTIONS, PUT, PATCH, DELETE]
-    :type methods: list or string
-
-    :param expose_headers:
-        The header or list which are safe to expose to the API of a CORS API
-        specification.
-
-        Default : None
-    :type expose_headers: list or string
-
-    :param allow_headers:
-        The header or list of header field names which can be used when this
-        resource is accessed by allowed origins. The header(s) may be regular
-        expressions, case-sensitive strings, or else an asterisk.
-
-        Default : '*', allow all headers
-    :type allow_headers: list, string or regex
-
-    :param supports_credentials:
-        Allows users to make authenticated requests. If true, injects the
-        `Access-Control-Allow-Credentials` header in responses. This allows
-        cookies and credentials to be submitted across domains.
-
-        :note: This option cannot be used in conjunction with a '*' origin
-
-        Default : False
-    :type supports_credentials: bool
-
-    :param max_age:
-        The maximum time for which this CORS request maybe cached. This value
-        is set as the `Access-Control-Max-Age` header.
-
-        Default : None
-    :type max_age: timedelta, integer, string or None
-
-    :param send_wildcard: If True, and the origins parameter is `*`, a wildcard
-        `Access-Control-Allow-Origin` header is sent, rather than the
-        request's `Origin` header.
-
-        Default : False
-    :type send_wildcard: bool
-
-    :param vary_header:
-        If True, the header Vary: Origin will be returned as per the W3
-        implementation guidelines.
-
-        Setting this header when the `Access-Control-Allow-Origin` is
-        dynamically generated (e.g. when there is more than one allowed
-        origin, and an Origin than '*' is returned) informs CDNs and other
-        caches that the CORS headers are dynamic, and cannot be cached.
-
-        If False, the Vary header will never be injected or altered.
-
-        Default : True
-    :type vary_header: bool
-
-    :param allow_private_network:
-        If True, the response header `Access-Control-Allow-Private-Network`
-        will be set with the value 'true' whenever the request header
-        `Access-Control-Request-Private-Network` has a value 'true'.
-
-        If False, the reponse header `Access-Control-Allow-Private-Network`
-        will be set with the value 'false' whenever the request header
-        `Access-Control-Request-Private-Network` has a value of 'true'.
-
-        If the request header `Access-Control-Request-Private-Network` is
-        not present or has a value other than 'true', the response header
-        `Access-Control-Allow-Private-Network` will not be set.
-
-        Default : True
-    :type allow_private_network: bool
-    """
-
-    def __init__(self, app=None, **kwargs):
-        self._options = kwargs
-        if app is not None:
-            self.init_app(app, **kwargs)
-
-    def init_app(self, app, **kwargs):
-        # The resources and options may be specified in the App Config, the CORS constructor
-        # or the kwargs to the call to init_app.
-        options = get_cors_options(app, self._options, kwargs)
-
-        # Flatten our resources into a list of the form
-        # (pattern_or_regexp, dictionary_of_options)
-        resources = parse_resources(options.get('resources'))
-
-        # Compute the options for each resource by combining the options from
-        # the app's configuration, the constructor, the kwargs to init_app, and
-        # finally the options specified in the resources dictionary.
-        resources = [
-                     (pattern, get_cors_options(app, options, opts))
-                     for (pattern, opts) in resources
-                    ]
-
-        # Create a human-readable form of these resources by converting the compiled
-        # regular expressions into strings.
-        resources_human = {get_regexp_pattern(pattern): opts for (pattern,opts) in resources}
-        LOG.debug("Configuring CORS with resources: %s", resources_human)
-
-        cors_after_request = make_after_request_function(resources)
-        app.after_request(cors_after_request)
-
-        # Wrap exception handlers with cross_origin
-        # These error handlers will still respect the behavior of the route
-        if options.get('intercept_exceptions', True):
-            def _after_request_decorator(f):
-                def wrapped_function(*args, **kwargs):
-                    return cors_after_request(app.make_response(f(*args, **kwargs)))
-                return wrapped_function
-
-            if hasattr(app, 'handle_exception'):
-                app.handle_exception = _after_request_decorator(
-                    app.handle_exception)
-                app.handle_user_exception = _after_request_decorator(
-                    app.handle_user_exception)
-
-def make_after_request_function(resources):
-    def cors_after_request(resp):
-        # If CORS headers are set in a view decorator, pass
-        if resp.headers is not None and resp.headers.get(ACL_ORIGIN):
-            LOG.debug('CORS have been already evaluated, skipping')
-            return resp
-        normalized_path = unquote_plus(request.path)
-        for res_regex, res_options in resources:
-            if try_match(normalized_path, res_regex):
-                LOG.debug("Request to '%r' matches CORS resource '%s'. Using options: %s",
-                      request.path, get_regexp_pattern(res_regex), res_options)
-                set_cors_headers(resp, res_options)
-                break
-        else:
-            LOG.debug('No CORS rule matches')
-        return resp
-    return cors_after_request
Index: venv/Lib/site-packages/pip-25.0.dist-info/LICENSE.txt
===================================================================
diff --git a/venv/Lib/site-packages/pip-25.0.dist-info/LICENSE.txt b/venv/Lib/site-packages/pip-25.0.dist-info/LICENSE.txt
deleted file mode 100644
--- a/venv/Lib/site-packages/pip-25.0.dist-info/LICENSE.txt	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,20 +0,0 @@
-Copyright (c) 2008-present The pip developers (see AUTHORS.txt file)
-
-Permission is hereby granted, free of charge, to any person obtaining
-a copy of this software and associated documentation files (the
-"Software"), to deal in the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish,
-distribute, sublicense, and/or sell copies of the Software, and to
-permit persons to whom the Software is furnished to do so, subject to
-the following conditions:
-
-The above copyright notice and this permission notice shall be
-included in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Index: venv/Lib/site-packages/Flask_Cors-5.0.0.dist-info/top_level.txt
===================================================================
diff --git a/venv/Lib/site-packages/Flask_Cors-5.0.0.dist-info/top_level.txt b/venv/Lib/site-packages/Flask_Cors-5.0.0.dist-info/top_level.txt
deleted file mode 100644
--- a/venv/Lib/site-packages/Flask_Cors-5.0.0.dist-info/top_level.txt	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,1 +0,0 @@
-flask_cors
Index: venv/Lib/site-packages/pip-25.0.dist-info/top_level.txt
===================================================================
diff --git a/venv/Lib/site-packages/pip-25.0.dist-info/top_level.txt b/venv/Lib/site-packages/pip-25.0.dist-info/top_level.txt
deleted file mode 100644
--- a/venv/Lib/site-packages/pip-25.0.dist-info/top_level.txt	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,1 +0,0 @@
-pip
Index: venv/Lib/site-packages/flask_cors/version.py
===================================================================
diff --git a/venv/Lib/site-packages/flask_cors/version.py b/venv/Lib/site-packages/flask_cors/version.py
deleted file mode 100644
--- a/venv/Lib/site-packages/flask_cors/version.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ /dev/null	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
@@ -1,1 +0,0 @@
-__version__ = '5.0.0'
Index: venv/Lib/site-packages/pip/_internal/metadata/importlib/_dists.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import email.message\r\nimport importlib.metadata\r\nimport pathlib\r\nimport zipfile\r\nfrom os import PathLike\r\nfrom typing import (\r\n    Collection,\r\n    Dict,\r\n    Iterable,\r\n    Iterator,\r\n    Mapping,\r\n    Optional,\r\n    Sequence,\r\n    cast,\r\n)\r\n\r\nfrom pip._vendor.packaging.requirements import Requirement\r\nfrom pip._vendor.packaging.utils import NormalizedName, canonicalize_name\r\nfrom pip._vendor.packaging.version import Version\r\nfrom pip._vendor.packaging.version import parse as parse_version\r\n\r\nfrom pip._internal.exceptions import InvalidWheel, UnsupportedWheel\r\nfrom pip._internal.metadata.base import (\r\n    BaseDistribution,\r\n    BaseEntryPoint,\r\n    InfoPath,\r\n    Wheel,\r\n)\r\nfrom pip._internal.utils.misc import normalize_path\r\nfrom pip._internal.utils.packaging import get_requirement\r\nfrom pip._internal.utils.temp_dir import TempDirectory\r\nfrom pip._internal.utils.wheel import parse_wheel, read_wheel_metadata_file\r\n\r\nfrom ._compat import (\r\n    BasePath,\r\n    get_dist_canonical_name,\r\n    parse_name_and_version_from_info_directory,\r\n)\r\n\r\n\r\nclass WheelDistribution(importlib.metadata.Distribution):\r\n    \"\"\"An ``importlib.metadata.Distribution`` read from a wheel.\r\n\r\n    Although ``importlib.metadata.PathDistribution`` accepts ``zipfile.Path``,\r\n    its implementation is too \"lazy\" for pip's needs (we can't keep the ZipFile\r\n    handle open for the entire lifetime of the distribution object).\r\n\r\n    This implementation eagerly reads the entire metadata directory into the\r\n    memory instead, and operates from that.\r\n    \"\"\"\r\n\r\n    def __init__(\r\n        self,\r\n        files: Mapping[pathlib.PurePosixPath, bytes],\r\n        info_location: pathlib.PurePosixPath,\r\n    ) -> None:\r\n        self._files = files\r\n        self.info_location = info_location\r\n\r\n    @classmethod\r\n    def from_zipfile(\r\n        cls,\r\n        zf: zipfile.ZipFile,\r\n        name: str,\r\n        location: str,\r\n    ) -> \"WheelDistribution\":\r\n        info_dir, _ = parse_wheel(zf, name)\r\n        paths = (\r\n            (name, pathlib.PurePosixPath(name.split(\"/\", 1)[-1]))\r\n            for name in zf.namelist()\r\n            if name.startswith(f\"{info_dir}/\")\r\n        )\r\n        files = {\r\n            relpath: read_wheel_metadata_file(zf, fullpath)\r\n            for fullpath, relpath in paths\r\n        }\r\n        info_location = pathlib.PurePosixPath(location, info_dir)\r\n        return cls(files, info_location)\r\n\r\n    def iterdir(self, path: InfoPath) -> Iterator[pathlib.PurePosixPath]:\r\n        # Only allow iterating through the metadata directory.\r\n        if pathlib.PurePosixPath(str(path)) in self._files:\r\n            return iter(self._files)\r\n        raise FileNotFoundError(path)\r\n\r\n    def read_text(self, filename: str) -> Optional[str]:\r\n        try:\r\n            data = self._files[pathlib.PurePosixPath(filename)]\r\n        except KeyError:\r\n            return None\r\n        try:\r\n            text = data.decode(\"utf-8\")\r\n        except UnicodeDecodeError as e:\r\n            wheel = self.info_location.parent\r\n            error = f\"Error decoding metadata for {wheel}: {e} in {filename} file\"\r\n            raise UnsupportedWheel(error)\r\n        return text\r\n\r\n    def locate_file(self, path: str | PathLike[str]) -> pathlib.Path:\r\n        # This method doesn't make sense for our in-memory wheel, but the API\r\n        # requires us to define it.\r\n        raise NotImplementedError\r\n\r\n\r\nclass Distribution(BaseDistribution):\r\n    def __init__(\r\n        self,\r\n        dist: importlib.metadata.Distribution,\r\n        info_location: Optional[BasePath],\r\n        installed_location: Optional[BasePath],\r\n    ) -> None:\r\n        self._dist = dist\r\n        self._info_location = info_location\r\n        self._installed_location = installed_location\r\n\r\n    @classmethod\r\n    def from_directory(cls, directory: str) -> BaseDistribution:\r\n        info_location = pathlib.Path(directory)\r\n        dist = importlib.metadata.Distribution.at(info_location)\r\n        return cls(dist, info_location, info_location.parent)\r\n\r\n    @classmethod\r\n    def from_metadata_file_contents(\r\n        cls,\r\n        metadata_contents: bytes,\r\n        filename: str,\r\n        project_name: str,\r\n    ) -> BaseDistribution:\r\n        # Generate temp dir to contain the metadata file, and write the file contents.\r\n        temp_dir = pathlib.Path(\r\n            TempDirectory(kind=\"metadata\", globally_managed=True).path\r\n        )\r\n        metadata_path = temp_dir / \"METADATA\"\r\n        metadata_path.write_bytes(metadata_contents)\r\n        # Construct dist pointing to the newly created directory.\r\n        dist = importlib.metadata.Distribution.at(metadata_path.parent)\r\n        return cls(dist, metadata_path.parent, None)\r\n\r\n    @classmethod\r\n    def from_wheel(cls, wheel: Wheel, name: str) -> BaseDistribution:\r\n        try:\r\n            with wheel.as_zipfile() as zf:\r\n                dist = WheelDistribution.from_zipfile(zf, name, wheel.location)\r\n        except zipfile.BadZipFile as e:\r\n            raise InvalidWheel(wheel.location, name) from e\r\n        return cls(dist, dist.info_location, pathlib.PurePosixPath(wheel.location))\r\n\r\n    @property\r\n    def location(self) -> Optional[str]:\r\n        if self._info_location is None:\r\n            return None\r\n        return str(self._info_location.parent)\r\n\r\n    @property\r\n    def info_location(self) -> Optional[str]:\r\n        if self._info_location is None:\r\n            return None\r\n        return str(self._info_location)\r\n\r\n    @property\r\n    def installed_location(self) -> Optional[str]:\r\n        if self._installed_location is None:\r\n            return None\r\n        return normalize_path(str(self._installed_location))\r\n\r\n    @property\r\n    def canonical_name(self) -> NormalizedName:\r\n        return get_dist_canonical_name(self._dist)\r\n\r\n    @property\r\n    def version(self) -> Version:\r\n        if version := parse_name_and_version_from_info_directory(self._dist)[1]:\r\n            return parse_version(version)\r\n        return parse_version(self._dist.version)\r\n\r\n    @property\r\n    def raw_version(self) -> str:\r\n        return self._dist.version\r\n\r\n    def is_file(self, path: InfoPath) -> bool:\r\n        return self._dist.read_text(str(path)) is not None\r\n\r\n    def iter_distutils_script_names(self) -> Iterator[str]:\r\n        # A distutils installation is always \"flat\" (not in e.g. egg form), so\r\n        # if this distribution's info location is NOT a pathlib.Path (but e.g.\r\n        # zipfile.Path), it can never contain any distutils scripts.\r\n        if not isinstance(self._info_location, pathlib.Path):\r\n            return\r\n        for child in self._info_location.joinpath(\"scripts\").iterdir():\r\n            yield child.name\r\n\r\n    def read_text(self, path: InfoPath) -> str:\r\n        content = self._dist.read_text(str(path))\r\n        if content is None:\r\n            raise FileNotFoundError(path)\r\n        return content\r\n\r\n    def iter_entry_points(self) -> Iterable[BaseEntryPoint]:\r\n        # importlib.metadata's EntryPoint structure satisfies BaseEntryPoint.\r\n        return self._dist.entry_points\r\n\r\n    def _metadata_impl(self) -> email.message.Message:\r\n        # From Python 3.10+, importlib.metadata declares PackageMetadata as the\r\n        # return type. This protocol is unfortunately a disaster now and misses\r\n        # a ton of fields that we need, including get() and get_payload(). We\r\n        # rely on the implementation that the object is actually a Message now,\r\n        # until upstream can improve the protocol. (python/cpython#94952)\r\n        return cast(email.message.Message, self._dist.metadata)\r\n\r\n    def iter_provided_extras(self) -> Iterable[NormalizedName]:\r\n        return [\r\n            canonicalize_name(extra)\r\n            for extra in self.metadata.get_all(\"Provides-Extra\", [])\r\n        ]\r\n\r\n    def iter_dependencies(self, extras: Collection[str] = ()) -> Iterable[Requirement]:\r\n        contexts: Sequence[Dict[str, str]] = [{\"extra\": e} for e in extras]\r\n        for req_string in self.metadata.get_all(\"Requires-Dist\", []):\r\n            # strip() because email.message.Message.get_all() may return a leading \\n\r\n            # in case a long header was wrapped.\r\n            req = get_requirement(req_string.strip())\r\n            if not req.marker:\r\n                yield req\r\n            elif not extras and req.marker.evaluate({\"extra\": \"\"}):\r\n                yield req\r\n            elif any(req.marker.evaluate(context) for context in contexts):\r\n                yield req\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/Lib/site-packages/pip/_internal/metadata/importlib/_dists.py b/venv/Lib/site-packages/pip/_internal/metadata/importlib/_dists.py
--- a/venv/Lib/site-packages/pip/_internal/metadata/importlib/_dists.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ b/venv/Lib/site-packages/pip/_internal/metadata/importlib/_dists.py	(date 1739585619498)
@@ -11,6 +11,7 @@
     Mapping,
     Optional,
     Sequence,
+    Union,
     cast,
 )
 
@@ -96,7 +97,7 @@
             raise UnsupportedWheel(error)
         return text
 
-    def locate_file(self, path: str | PathLike[str]) -> pathlib.Path:
+    def locate_file(self, path: Union[str, "PathLike[str]"]) -> pathlib.Path:
         # This method doesn't make sense for our in-memory wheel, but the API
         # requires us to define it.
         raise NotImplementedError
Index: venv/Lib/site-packages/pip/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from typing import List, Optional\r\n\r\n__version__ = \"25.0\"\r\n\r\n\r\ndef main(args: Optional[List[str]] = None) -> int:\r\n    \"\"\"This is an internal API only meant for use by pip's own console scripts.\r\n\r\n    For additional details, see https://github.com/pypa/pip/issues/7498.\r\n    \"\"\"\r\n    from pip._internal.utils.entrypoints import _wrapper\r\n\r\n    return _wrapper(args)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/Lib/site-packages/pip/__init__.py b/venv/Lib/site-packages/pip/__init__.py
--- a/venv/Lib/site-packages/pip/__init__.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ b/venv/Lib/site-packages/pip/__init__.py	(date 1739585619470)
@@ -1,6 +1,6 @@
 from typing import List, Optional
 
-__version__ = "25.0"
+__version__ = "25.0.1"
 
 
 def main(args: Optional[List[str]] = None) -> int:
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.8 (PyBoy-master)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.8 (PyBoy-master)\" project-jdk-type=\"Python SDK\" />\r\n  <component name=\"PythonCompatibilityInspectionAdvertiser\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ b/.idea/misc.xml	(date 1739585433428)
@@ -3,7 +3,7 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.8 (PyBoy-master)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (PyBoy-master)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12 (Capstone)" project-jdk-type="Python SDK" />
   <component name="PythonCompatibilityInspectionAdvertiser">
     <option name="version" value="3" />
   </component>
Index: venv/Lib/site-packages/flask-3.1.0.dist-info/RECORD
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../../Scripts/flask.exe,sha256=-JR1PpFJ71D1wfXToigUEl_YJLyD7Heg2kVug85HEBM,108409\r\nflask-3.1.0.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4\r\nflask-3.1.0.dist-info/LICENSE.txt,sha256=SJqOEQhQntmKN7uYPhHg9-HTHwvY-Zp5yESOf_N9B-o,1475\r\nflask-3.1.0.dist-info/METADATA,sha256=Wvf66xwUclGRu89cNcvErpaMf1rMgcxeqIkTc4EmD90,2718\r\nflask-3.1.0.dist-info/RECORD,,\r\nflask-3.1.0.dist-info/REQUESTED,sha256=47DEQpj8HBSa-_TImW-5JCeuQeRkm5NMpJWZG3hSuFU,0\r\nflask-3.1.0.dist-info/WHEEL,sha256=CpUCUxeHQbRN5UGRQHYRJorO5Af-Qy_fHMctcQ8DSGI,82\r\nflask-3.1.0.dist-info/entry_points.txt,sha256=bBP7hTOS5fz9zLtC7sPofBZAlMkEvBxu7KqS6l5lvc4,40\r\nflask/__init__.py,sha256=6xMqdVA0FIQ2U1KVaGX3lzNCdXPzoHPaa0hvQCNcfSk,2625\r\nflask/__main__.py,sha256=bYt9eEaoRQWdejEHFD8REx9jxVEdZptECFsV7F49Ink,30\r\nflask/__pycache__/__init__.cpython-312.pyc,,\r\nflask/__pycache__/__main__.cpython-312.pyc,,\r\nflask/__pycache__/app.cpython-312.pyc,,\r\nflask/__pycache__/blueprints.cpython-312.pyc,,\r\nflask/__pycache__/cli.cpython-312.pyc,,\r\nflask/__pycache__/config.cpython-312.pyc,,\r\nflask/__pycache__/ctx.cpython-312.pyc,,\r\nflask/__pycache__/debughelpers.cpython-312.pyc,,\r\nflask/__pycache__/globals.cpython-312.pyc,,\r\nflask/__pycache__/helpers.cpython-312.pyc,,\r\nflask/__pycache__/logging.cpython-312.pyc,,\r\nflask/__pycache__/sessions.cpython-312.pyc,,\r\nflask/__pycache__/signals.cpython-312.pyc,,\r\nflask/__pycache__/templating.cpython-312.pyc,,\r\nflask/__pycache__/testing.cpython-312.pyc,,\r\nflask/__pycache__/typing.cpython-312.pyc,,\r\nflask/__pycache__/views.cpython-312.pyc,,\r\nflask/__pycache__/wrappers.cpython-312.pyc,,\r\nflask/app.py,sha256=GE7QOE_N9THDjuzKx0gUI9aF4hLh0xwBDa7hLVsjy-o,61725\r\nflask/blueprints.py,sha256=p5QE2lY18GItbdr_RKRpZ8Do17g0PvQGIgZkSUDhX2k,4541\r\nflask/cli.py,sha256=XdmkBD74SnT0jrt2gqyHrE9oXGdWlcdTrJQR-i5aApY,37093\r\nflask/config.py,sha256=PiqF0DPam6HW0FH4CH1hpXTBe30NSzjPEOwrz1b6kt0,13219\r\nflask/ctx.py,sha256=4atDhJJ_cpV1VMq4qsfU4E_61M1oN93jlS2H9gjrl58,15120\r\nflask/debughelpers.py,sha256=PGIDhStW_efRjpaa3zHIpo-htStJOR41Ip3OJWPYBwo,6080\r\nflask/globals.py,sha256=XdQZmStBmPIs8t93tjx6pO7Bm3gobAaONWkFcUHaGas,1713\r\nflask/helpers.py,sha256=7njmzkFJvrPSQudsgONsgQzaGrGppeBINevKgWescPk,23521\r\nflask/json/__init__.py,sha256=hLNR898paqoefdeAhraa5wyJy-bmRB2k2dV4EgVy2Z8,5602\r\nflask/json/__pycache__/__init__.cpython-312.pyc,,\r\nflask/json/__pycache__/provider.cpython-312.pyc,,\r\nflask/json/__pycache__/tag.cpython-312.pyc,,\r\nflask/json/provider.py,sha256=5imEzY5HjV2HoUVrQbJLqXCzMNpZXfD0Y1XqdLV2XBA,7672\r\nflask/json/tag.py,sha256=DhaNwuIOhdt2R74oOC9Y4Z8ZprxFYiRb5dUP5byyINw,9281\r\nflask/logging.py,sha256=8sM3WMTubi1cBb2c_lPkWpN0J8dMAqrgKRYLLi1dCVI,2377\r\nflask/py.typed,sha256=47DEQpj8HBSa-_TImW-5JCeuQeRkm5NMpJWZG3hSuFU,0\r\nflask/sansio/README.md,sha256=-0X1tECnilmz1cogx-YhNw5d7guK7GKrq_DEV2OzlU0,228\r\nflask/sansio/__pycache__/app.cpython-312.pyc,,\r\nflask/sansio/__pycache__/blueprints.cpython-312.pyc,,\r\nflask/sansio/__pycache__/scaffold.cpython-312.pyc,,\r\nflask/sansio/app.py,sha256=Wj9NVGtiR1jvkZ9gSFd91usUlM8H0g06aPVz2sMh4bw,38116\r\nflask/sansio/blueprints.py,sha256=Tqe-7EkZ-tbWchm8iDoCfD848f0_3nLv6NNjeIPvHwM,24637\r\nflask/sansio/scaffold.py,sha256=q6wM4Y4aYMGGN_Litsj3PYKpBS3Zvut0xhDmpBEHFdo,30387\r\nflask/sessions.py,sha256=pImSFQIDCPtV-XSI8ttAyTTbvtRMkhDeqJ8VPZZUaf0,15430\r\nflask/signals.py,sha256=V7lMUww7CqgJ2ThUBn1PiatZtQanOyt7OZpu2GZI-34,750\r\nflask/templating.py,sha256=2TcXLT85Asflm2W9WOSFxKCmYn5e49w_Jkg9-NaaJWo,7537\r\nflask/testing.py,sha256=5Dxg6VZ0ZPhjwG9ReUl4TrhvkjBYvgIzV949jkY0jIU,10100\r\nflask/typing.py,sha256=b7mMBIeAoOcAI_vFzzhfOm7KeZ_n868SIMw6xpX5KYQ,3166\r\nflask/views.py,sha256=xzJx6oJqGElThtEghZN7ZQGMw5TDFyuRxUkecwRuAoA,6962\r\nflask/wrappers.py,sha256=jUkv4mVek2Iq4hwxd4RvqrIMb69Bv0PElDgWLmd5ORo,9406\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/Lib/site-packages/flask-3.1.0.dist-info/RECORD b/venv/Lib/site-packages/flask-3.1.0.dist-info/RECORD
--- a/venv/Lib/site-packages/flask-3.1.0.dist-info/RECORD	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ b/venv/Lib/site-packages/flask-3.1.0.dist-info/RECORD	(date 1739585607682)
@@ -1,4 +1,4 @@
-../../Scripts/flask.exe,sha256=-JR1PpFJ71D1wfXToigUEl_YJLyD7Heg2kVug85HEBM,108409
+../../Scripts/flask.exe,sha256=bXNx7cNoxZrRFccck3wPQs6vIwMETy5f5psDsDp4Ptc,108407
 flask-3.1.0.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4
 flask-3.1.0.dist-info/LICENSE.txt,sha256=SJqOEQhQntmKN7uYPhHg9-HTHwvY-Zp5yESOf_N9B-o,1475
 flask-3.1.0.dist-info/METADATA,sha256=Wvf66xwUclGRu89cNcvErpaMf1rMgcxeqIkTc4EmD90,2718
Index: .idea/Capstone.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Capstone.iml b/.idea/Capstone.iml
--- a/.idea/Capstone.iml	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ b/.idea/Capstone.iml	(date 1739585541414)
@@ -2,7 +2,14 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="Python 3.12 (Capstone)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
+  <component name="TemplatesService">
+    <option name="TEMPLATE_FOLDERS">
+      <list>
+        <option value="$MODULE_DIR$/templates" />
+      </list>
+    </option>
+  </component>
 </module>
\ No newline at end of file
Index: venv/Lib/site-packages/pip/_internal/build_env.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"Build Environment used for isolation during sdist building\r\n\"\"\"\r\n\r\nimport logging\r\nimport os\r\nimport pathlib\r\nimport site\r\nimport sys\r\nimport textwrap\r\nfrom collections import OrderedDict\r\nfrom types import TracebackType\r\nfrom typing import TYPE_CHECKING, Iterable, List, Optional, Set, Tuple, Type, Union\r\n\r\nfrom pip._vendor.certifi import where\r\nfrom pip._vendor.packaging.version import Version\r\n\r\nfrom pip import __file__ as pip_location\r\nfrom pip._internal.cli.spinners import open_spinner\r\nfrom pip._internal.locations import get_platlib, get_purelib, get_scheme\r\nfrom pip._internal.metadata import get_default_environment, get_environment\r\nfrom pip._internal.utils.logging import VERBOSE\r\nfrom pip._internal.utils.packaging import get_requirement\r\nfrom pip._internal.utils.subprocess import call_subprocess\r\nfrom pip._internal.utils.temp_dir import TempDirectory, tempdir_kinds\r\n\r\nif TYPE_CHECKING:\r\n    from pip._internal.index.package_finder import PackageFinder\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\ndef _dedup(a: str, b: str) -> Union[Tuple[str], Tuple[str, str]]:\r\n    return (a, b) if a != b else (a,)\r\n\r\n\r\nclass _Prefix:\r\n    def __init__(self, path: str) -> None:\r\n        self.path = path\r\n        self.setup = False\r\n        scheme = get_scheme(\"\", prefix=path)\r\n        self.bin_dir = scheme.scripts\r\n        self.lib_dirs = _dedup(scheme.purelib, scheme.platlib)\r\n\r\n\r\ndef get_runnable_pip() -> str:\r\n    \"\"\"Get a file to pass to a Python executable, to run the currently-running pip.\r\n\r\n    This is used to run a pip subprocess, for installing requirements into the build\r\n    environment.\r\n    \"\"\"\r\n    source = pathlib.Path(pip_location).resolve().parent\r\n\r\n    if not source.is_dir():\r\n        # This would happen if someone is using pip from inside a zip file. In that\r\n        # case, we can use that directly.\r\n        return str(source)\r\n\r\n    return os.fsdecode(source / \"__pip-runner__.py\")\r\n\r\n\r\ndef _get_system_sitepackages() -> Set[str]:\r\n    \"\"\"Get system site packages\r\n\r\n    Usually from site.getsitepackages,\r\n    but fallback on `get_purelib()/get_platlib()` if unavailable\r\n    (e.g. in a virtualenv created by virtualenv<20)\r\n\r\n    Returns normalized set of strings.\r\n    \"\"\"\r\n    if hasattr(site, \"getsitepackages\"):\r\n        system_sites = site.getsitepackages()\r\n    else:\r\n        # virtualenv < 20 overwrites site.py without getsitepackages\r\n        # fallback on get_purelib/get_platlib.\r\n        # this is known to miss things, but shouldn't in the cases\r\n        # where getsitepackages() has been removed (inside a virtualenv)\r\n        system_sites = [get_purelib(), get_platlib()]\r\n    return {os.path.normcase(path) for path in system_sites}\r\n\r\n\r\nclass BuildEnvironment:\r\n    \"\"\"Creates and manages an isolated environment to install build deps\"\"\"\r\n\r\n    def __init__(self) -> None:\r\n        temp_dir = TempDirectory(kind=tempdir_kinds.BUILD_ENV, globally_managed=True)\r\n\r\n        self._prefixes = OrderedDict(\r\n            (name, _Prefix(os.path.join(temp_dir.path, name)))\r\n            for name in (\"normal\", \"overlay\")\r\n        )\r\n\r\n        self._bin_dirs: List[str] = []\r\n        self._lib_dirs: List[str] = []\r\n        for prefix in reversed(list(self._prefixes.values())):\r\n            self._bin_dirs.append(prefix.bin_dir)\r\n            self._lib_dirs.extend(prefix.lib_dirs)\r\n\r\n        # Customize site to:\r\n        # - ensure .pth files are honored\r\n        # - prevent access to system site packages\r\n        system_sites = _get_system_sitepackages()\r\n\r\n        self._site_dir = os.path.join(temp_dir.path, \"site\")\r\n        if not os.path.exists(self._site_dir):\r\n            os.mkdir(self._site_dir)\r\n        with open(\r\n            os.path.join(self._site_dir, \"sitecustomize.py\"), \"w\", encoding=\"utf-8\"\r\n        ) as fp:\r\n            fp.write(\r\n                textwrap.dedent(\r\n                    \"\"\"\r\n                import os, site, sys\r\n\r\n                # First, drop system-sites related paths.\r\n                original_sys_path = sys.path[:]\r\n                known_paths = set()\r\n                for path in {system_sites!r}:\r\n                    site.addsitedir(path, known_paths=known_paths)\r\n                system_paths = set(\r\n                    os.path.normcase(path)\r\n                    for path in sys.path[len(original_sys_path):]\r\n                )\r\n                original_sys_path = [\r\n                    path for path in original_sys_path\r\n                    if os.path.normcase(path) not in system_paths\r\n                ]\r\n                sys.path = original_sys_path\r\n\r\n                # Second, add lib directories.\r\n                # ensuring .pth file are processed.\r\n                for path in {lib_dirs!r}:\r\n                    assert not path in sys.path\r\n                    site.addsitedir(path)\r\n                \"\"\"\r\n                ).format(system_sites=system_sites, lib_dirs=self._lib_dirs)\r\n            )\r\n\r\n    def __enter__(self) -> None:\r\n        self._save_env = {\r\n            name: os.environ.get(name, None)\r\n            for name in (\"PATH\", \"PYTHONNOUSERSITE\", \"PYTHONPATH\")\r\n        }\r\n\r\n        path = self._bin_dirs[:]\r\n        old_path = self._save_env[\"PATH\"]\r\n        if old_path:\r\n            path.extend(old_path.split(os.pathsep))\r\n\r\n        pythonpath = [self._site_dir]\r\n\r\n        os.environ.update(\r\n            {\r\n                \"PATH\": os.pathsep.join(path),\r\n                \"PYTHONNOUSERSITE\": \"1\",\r\n                \"PYTHONPATH\": os.pathsep.join(pythonpath),\r\n            }\r\n        )\r\n\r\n    def __exit__(\r\n        self,\r\n        exc_type: Optional[Type[BaseException]],\r\n        exc_val: Optional[BaseException],\r\n        exc_tb: Optional[TracebackType],\r\n    ) -> None:\r\n        for varname, old_value in self._save_env.items():\r\n            if old_value is None:\r\n                os.environ.pop(varname, None)\r\n            else:\r\n                os.environ[varname] = old_value\r\n\r\n    def check_requirements(\r\n        self, reqs: Iterable[str]\r\n    ) -> Tuple[Set[Tuple[str, str]], Set[str]]:\r\n        \"\"\"Return 2 sets:\r\n        - conflicting requirements: set of (installed, wanted) reqs tuples\r\n        - missing requirements: set of reqs\r\n        \"\"\"\r\n        missing = set()\r\n        conflicting = set()\r\n        if reqs:\r\n            env = (\r\n                get_environment(self._lib_dirs)\r\n                if hasattr(self, \"_lib_dirs\")\r\n                else get_default_environment()\r\n            )\r\n            for req_str in reqs:\r\n                req = get_requirement(req_str)\r\n                # We're explicitly evaluating with an empty extra value, since build\r\n                # environments are not provided any mechanism to select specific extras.\r\n                if req.marker is not None and not req.marker.evaluate({\"extra\": \"\"}):\r\n                    continue\r\n                dist = env.get_distribution(req.name)\r\n                if not dist:\r\n                    missing.add(req_str)\r\n                    continue\r\n                if isinstance(dist.version, Version):\r\n                    installed_req_str = f\"{req.name}=={dist.version}\"\r\n                else:\r\n                    installed_req_str = f\"{req.name}==={dist.version}\"\r\n                if not req.specifier.contains(dist.version, prereleases=True):\r\n                    conflicting.add((installed_req_str, req_str))\r\n                # FIXME: Consider direct URL?\r\n        return conflicting, missing\r\n\r\n    def install_requirements(\r\n        self,\r\n        finder: \"PackageFinder\",\r\n        requirements: Iterable[str],\r\n        prefix_as_string: str,\r\n        *,\r\n        kind: str,\r\n    ) -> None:\r\n        prefix = self._prefixes[prefix_as_string]\r\n        assert not prefix.setup\r\n        prefix.setup = True\r\n        if not requirements:\r\n            return\r\n        self._install_requirements(\r\n            get_runnable_pip(),\r\n            finder,\r\n            requirements,\r\n            prefix,\r\n            kind=kind,\r\n        )\r\n\r\n    @staticmethod\r\n    def _install_requirements(\r\n        pip_runnable: str,\r\n        finder: \"PackageFinder\",\r\n        requirements: Iterable[str],\r\n        prefix: _Prefix,\r\n        *,\r\n        kind: str,\r\n    ) -> None:\r\n        args: List[str] = [\r\n            sys.executable,\r\n            pip_runnable,\r\n            \"install\",\r\n            \"--ignore-installed\",\r\n            \"--no-user\",\r\n            \"--prefix\",\r\n            prefix.path,\r\n            \"--no-warn-script-location\",\r\n            \"--disable-pip-version-check\",\r\n            # The prefix specified two lines above, thus\r\n            # target from config file or env var should be ignored\r\n            \"--target\",\r\n            \"\",\r\n            \"--cert\",\r\n            finder.custom_cert or where(),\r\n        ]\r\n        if logger.getEffectiveLevel() <= logging.DEBUG:\r\n            args.append(\"-vv\")\r\n        elif logger.getEffectiveLevel() <= VERBOSE:\r\n            args.append(\"-v\")\r\n        for format_control in (\"no_binary\", \"only_binary\"):\r\n            formats = getattr(finder.format_control, format_control)\r\n            args.extend(\r\n                (\r\n                    \"--\" + format_control.replace(\"_\", \"-\"),\r\n                    \",\".join(sorted(formats or {\":none:\"})),\r\n                )\r\n            )\r\n\r\n        index_urls = finder.index_urls\r\n        if index_urls:\r\n            args.extend([\"-i\", index_urls[0]])\r\n            for extra_index in index_urls[1:]:\r\n                args.extend([\"--extra-index-url\", extra_index])\r\n        else:\r\n            args.append(\"--no-index\")\r\n        for link in finder.find_links:\r\n            args.extend([\"--find-links\", link])\r\n\r\n        if finder.proxy:\r\n            args.extend([\"--proxy\", finder.proxy])\r\n        for host in finder.trusted_hosts:\r\n            args.extend([\"--trusted-host\", host])\r\n        if finder.client_cert:\r\n            args.extend([\"--client-cert\", finder.client_cert])\r\n        if finder.allow_all_prereleases:\r\n            args.append(\"--pre\")\r\n        if finder.prefer_binary:\r\n            args.append(\"--prefer-binary\")\r\n        args.append(\"--\")\r\n        args.extend(requirements)\r\n        with open_spinner(f\"Installing {kind}\") as spinner:\r\n            call_subprocess(\r\n                args,\r\n                command_desc=f\"pip subprocess to install {kind}\",\r\n                spinner=spinner,\r\n            )\r\n\r\n\r\nclass NoOpBuildEnvironment(BuildEnvironment):\r\n    \"\"\"A no-op drop-in replacement for BuildEnvironment\"\"\"\r\n\r\n    def __init__(self) -> None:\r\n        pass\r\n\r\n    def __enter__(self) -> None:\r\n        pass\r\n\r\n    def __exit__(\r\n        self,\r\n        exc_type: Optional[Type[BaseException]],\r\n        exc_val: Optional[BaseException],\r\n        exc_tb: Optional[TracebackType],\r\n    ) -> None:\r\n        pass\r\n\r\n    def cleanup(self) -> None:\r\n        pass\r\n\r\n    def install_requirements(\r\n        self,\r\n        finder: \"PackageFinder\",\r\n        requirements: Iterable[str],\r\n        prefix_as_string: str,\r\n        *,\r\n        kind: str,\r\n    ) -> None:\r\n        raise NotImplementedError()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/venv/Lib/site-packages/pip/_internal/build_env.py b/venv/Lib/site-packages/pip/_internal/build_env.py
--- a/venv/Lib/site-packages/pip/_internal/build_env.py	(revision b7555e4035b8174f269364bc01a730fab92a7cd0)
+++ b/venv/Lib/site-packages/pip/_internal/build_env.py	(date 1739585619473)
@@ -11,7 +11,6 @@
 from types import TracebackType
 from typing import TYPE_CHECKING, Iterable, List, Optional, Set, Tuple, Type, Union
 
-from pip._vendor.certifi import where
 from pip._vendor.packaging.version import Version
 
 from pip import __file__ as pip_location
@@ -246,8 +245,6 @@
             # target from config file or env var should be ignored
             "--target",
             "",
-            "--cert",
-            finder.custom_cert or where(),
         ]
         if logger.getEffectiveLevel() <= logging.DEBUG:
             args.append("-vv")
@@ -276,6 +273,8 @@
             args.extend(["--proxy", finder.proxy])
         for host in finder.trusted_hosts:
             args.extend(["--trusted-host", host])
+        if finder.custom_cert:
+            args.extend(["--cert", finder.custom_cert])
         if finder.client_cert:
             args.extend(["--client-cert", finder.client_cert])
         if finder.allow_all_prereleases:
